{"version":3,"sources":["components/card.js","components/form-group.js","app/apiservice.js","app/exception/ErroValidacao.js","app/service/usuarioService.js","components/toastr.js","app/service/localstorageService.js","app/service/authService.js","main/provedorAutenticacao.js","views/login.js","views/home.js","views/cadastroUsuario.js","components/selectMenu.js","views/processos/processosTable.js","app/service/processoService.js","views/processos/consulta-processos.js","views/processos/cadastro-processos.js","main/rotas.js","components/navbarItem.js","components/navbar.js","main/App.js","index.js"],"names":["Card","className","this","props","title","children","React","Component","FormGroup","htmlFor","label","httpClient","axios","create","baseURL","ApiService","apiurl","url","objeto","requestUrl","post","put","delete","get","ErroValidacao","mensagens","UsuarioService","credenciais","usuario","erros","nome","push","email","match","senha","senhaRepeticao","length","mostrarMensagem","titulo","mensagem","tipo","toastr","mensagemErro","mensagemSucesso","options","LocalStorageService","chave","valor","localStorage","setItem","JSON","stringify","item","getItem","parse","removeItem","AuthService","obterItem","id","removerItem","adicionarItem","AuthContext","createContext","AuthConsumer","Consumer","AuthProvider","Provider","ProvedorAutenticacao","state","usuarioAutenticado","isAutenticado","iniciarSessao","logar","setState","encerrarSessao","removerUsuarioAutenticado","contexto","value","Login","entrar","service","autenticar","then","response","context","data","history","catch","erro","prepareCadastrar","style","position","left","type","onChange","e","target","aria-describedby","placeholder","onClick","contextType","withRouter","Home","usuarioService","href","role","CadastroUsuario","cadastrar","validar","forEach","msg","salvar","error","cancelar","name","lista","map","option","index","key","rows","processos","processo","parecer","mes","status","disabled","alterarStatus","editAction","deleteAction","scope","ProcessoService","ano","processoFiltro","params","ConsultaProcessos","showConfirmDialog","processoDeletar","buscar","messages","usuarioLogado","consultar","resposta","console","log","editar","abrirConfirmacao","cancelarDelecao","deletar","indexOf","splice","preparaFormularioCadastro","meses","obterListaMeses","confirmDialogFooter","icon","header","visible","width","footer","modal","onHide","CadastroProcessos","atualizando","submit","atualizar","handleChange","event","obterPorId","RotaAutenticada","component","isUsuarioAutenticado","render","componentProps","to","pathname","from","location","Rotas","path","NavbarItem","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","deslogar","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5543eb17.chunk.js","sourcesContent":["import React from 'react'\n\nclass Card extends React.Component{\n\n    render(){\n        return(\n            <div className=\"card md-3\">\n                <h3 className=\"card-header\">{this.props.title}</h3>\n                <div className=\"card-body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card","import React from 'react'\n\nfunction FormGroup(props){\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={props.htmlFor}>{props.label}</label>\n            {props.children}\n        </div>\n    )\n}\n\nexport default FormGroup","import axios from 'axios'\n\nexport const httpClient = axios.create({\n    //baseURL: 'https://processos-api.herokuapp.com/'\n    baseURL: 'http://localhost:8080'\n})\n\nclass ApiService {\n\n    constructor(apiurl){\n        this.apiurl = apiurl;\n    }\n\n    post(url, objeto){\n        const requestUrl = `${this.apiurl}${url}`\n        return httpClient.post(requestUrl, objeto);\n    }\n\n    put(url, objeto){\n        const requestUrl = `${this.apiurl}${url}`\n        return httpClient.put(requestUrl, objeto);\n    }\n\n    delete(url){\n        const requestUrl = `${this.apiurl}${url}`\n        return httpClient.delete(requestUrl)\n    }\n\n    get(url){\n        const requestUrl = `${this.apiurl}${url}`\n        return httpClient.get(requestUrl)\n    }\n}\n\n\nexport default ApiService;","function ErroValidacao(mensagens){\n    this.mensagens = mensagens;\n}\n\nexport default ErroValidacao;","import ApiService from '../apiservice'\n\nimport ErroValidacao from '../exception/ErroValidacao'\n\nclass UsuarioService extends ApiService {\n\n    constructor(){\n        super('/api/usuarios')\n    }\n\n    autenticar(credenciais){\n        return this.post('/autenticar', credenciais)\n    }\n\n\n    salvar(usuario){\n        return this.post('/', usuario);\n    }\n\n    validar(usuario){\n        const erros = []\n\n        if(!usuario.nome){\n            erros.push('O campo Nome é obrigatório.')\n        }\n\n        if(!usuario.email){\n            erros.push('O campo Email é obrigatório.')\n        }else if( !usuario.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/) ){\n            erros.push('Informe um Email válido.')\n        }\n\n        if(!usuario.senha || !usuario.senhaRepeticao){\n            erros.push('Digite a senha 2x.')\n        }else if( usuario.senha !== usuario.senhaRepeticao ){\n            erros.push('As senhas não batem.')\n        }        \n\n        if(erros && erros.length > 0){\n            throw new ErroValidacao(erros);\n        }\n    }\n\n}\n\nexport default UsuarioService;","import toastr from 'toastr'\n\ntoastr.options = {\n    \"closeButton\": true,\n    \"debug\": false,\n    \"newestOnTop\": false,\n    \"progressBar\": true,\n    \"positionClass\": \"toast-top-right\",\n    \"preventDuplicates\": false,\n    \"onclick\": null,\n    \"showDuration\": \"300\",\n    \"hideDuration\": \"1000\",\n    \"timeOut\": \"5000\",\n    \"extendedTimeOut\": \"1000\",\n    \"showEasing\": \"swing\",\n    \"hideEasing\": \"linear\",\n    \"showMethod\": \"fadeIn\",\n    \"hideMethod\": \"fadeOut\"\n  }\n\nexport function mostrarMensagem(titulo, mensagem, tipo){\n    toastr[tipo](mensagem, titulo)\n}\n\nexport function mensagemErro(mensagem){\n    mostrarMensagem('Erro', mensagem, 'error')\n}\n\nexport function mensagemSucesso(mensagem){\n    mostrarMensagem('Sucesso', mensagem, 'success')\n}\n\nexport function mensagemAlert(mensagem){\n    mostrarMensagem('Alerta', mensagem, 'warning')\n}","export default class LocalStorageService {\n    \n    static adicionarItem(chave, valor){\n        localStorage.setItem(chave, JSON.stringify(valor));\n    }\n\n    static obterItem(chave){\n        const item = localStorage.getItem(chave);\n        return JSON.parse(item)\n    }\n\n    static removerItem(chave){\n        localStorage.removeItem(chave)\n    }\n}","import LocalStorageService from './localstorageService'\n\nexport const USUARIO_LOGADO = '_usuario_logado'\n\nexport default class AuthService {\n\n    static isUsuarioAutenticado(){\n        const usuario = LocalStorageService.obterItem(USUARIO_LOGADO)\n        return usuario && usuario.id;\n    }\n\n    static removerUsuarioAutenticado(){\n        LocalStorageService.removerItem(USUARIO_LOGADO)\n    }\n\n    static logar(usuario){\n        LocalStorageService.adicionarItem(USUARIO_LOGADO, usuario)\n    }\n\n    static obterUsuarioAutenticado(){\n        return LocalStorageService.obterItem(USUARIO_LOGADO);\n    }\n\n}","import React from 'react'\n\nimport AuthService from '../app/service/authService'\n\nexport const AuthContext = React.createContext()\nexport const AuthConsumer = AuthContext.Consumer;\n\nconst AuthProvider = AuthContext.Provider;\n\nclass ProvedorAutenticacao extends React.Component{\n\n    state = {\n        usuarioAutenticado: null,\n        isAutenticado: false\n    }\n\n    iniciarSessao = (usuario) => {\n        AuthService.logar(usuario);\n        this.setState({ isAutenticado: true, usuarioAutenticado: usuario })\n    }\n\n    encerrarSessao = () => {\n        AuthService.removerUsuarioAutenticado();\n        this.setState({ isAutenticado: false, usuarioAutenticado: null})\n    }\n\n    render(){\n        const contexto = {\n            usuarioAutenticado: this.state.usuarioAutenticado,\n            isAutenticado: this.state.isAutenticado,\n            iniciarSessao: this.iniciarSessao,\n            encerrarSessao: this.encerrarSessao\n        }\n\n        return(\n            <AuthProvider value={contexto} >\n                {this.props.children}\n            </AuthProvider>\n        )\n    }\n}\n\nexport default ProvedorAutenticacao;","import React from 'react'\nimport Card from '../components/card'\nimport FormGroup from '../components/form-group'\nimport { withRouter } from 'react-router-dom'\n\nimport UsuarioService from '../app/service/usuarioService'\n//import LocalStorageService from '../app/service/localstorageService'\nimport { mensagemErro } from '../components/toastr'\nimport { AuthContext  } from '../main/provedorAutenticacao'\n\nclass Login extends React.Component{\n\n    state = {\n        email: '',\n        senha: ''\n    }\n\n    constructor(){\n        super();\n        this.service = new UsuarioService();\n    }\n\n    entrar = () => {\n        this.service.autenticar({\n            email: this.state.email,\n            senha: this.state.senha\n        }).then( response => {\n            this.context.iniciarSessao(response.data)\n            this.props.history.push('/home')\n        }).catch( erro => {\n           mensagemErro(erro.response.data)\n        })\n    }\n\n    prepareCadastrar = () => {\n        this.props.history.push('/cadastro-usuarios')\n    }\n\n    render(){\n        return (\n\n            <div className=\"row\">\n                <div className=\"col-md-6\" style={ {position : 'relative', left: '300px'} }>\n                    <div className=\"bs-docs-section\">\n                        <Card title=\"Login\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-12\">\n                                    <div className=\"bs-component\">\n                                        <fieldset>\n                                            <FormGroup label=\"Email: *\" htmlFor=\"exampleInputEmail1\">\n                                                <input type=\"email\" \n                                                    value={this.state.email}\n                                                    onChange={e => this.setState({email: e.target.value})}\n                                                    className=\"form-control\" \n                                                    id=\"exampleInputEmail1\" \n                                                    aria-describedby=\"emailHelp\" \n                                                    placeholder=\"Digite o Email\" />\n                                            </FormGroup>\n                                            <FormGroup label=\"Senha: *\" htmlFor=\"exampleInputPassword1\">\n                                                <input type=\"password\" \n                                                        value={this.state.senha}\n                                                        onChange={e => this.setState({senha: e.target.value})}\n                                                        className=\"form-control\" \n                                                        id=\"exampleInputPassword1\" \n                                                        placeholder=\"Password\" />\n                                            </FormGroup>\n                                            <button onClick={this.entrar} className=\"btn btn-success\">\n                                                <i className=\"pi pi-sign-in\"></i>Entrar</button>\n                                            <button onClick={this.prepareCadastrar} \n                                                    className=\"btn btn-danger\">\n                                                    <i className=\"pi pi-plus\"></i>  Cadastrar\n                                            </button>\n                                        </fieldset>\n                                    </div>\n                                </div>\n                            </div>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nLogin.contextType = AuthContext\n\nexport default withRouter( Login )","import React from 'react'\n\nimport UsuarioService from '../app/service/usuarioService'\nimport { AuthContext } from '../main/provedorAutenticacao'\n\nclass Home extends React.Component{\n\n    state = {\n        \n    }\n\n    constructor(){\n        super()\n        this.usuarioService = new UsuarioService();\n    }\n\n\n    render(){\n        return (\n            <div className=\"jumbotron\">\n                <h1 className=\"display-3\">Bem vindo!</h1>\n                <p className=\"lead\">Esse é seu sistema de processos.</p>\n              \n                <hr className=\"my-4\" />\n                <p>E essa é sua área administrativa, utilize um dos menus ou botões abaixo para navegar pelo sistema.</p>\n                <p className=\"lead\">\n                    <a className=\"btn btn-primary btn-lg\" \n                    href=\"#/cadastro-usuarios\" \n                    role=\"button\"><i className=\"pi pi-users\"></i>  \n                     Cadastrar Usuário\n                    </a>\n                    <a className=\"btn btn-danger btn-lg\" \n                    href=\"#/cadastro-processos\" \n                    role=\"button\"><i className=\"pi pi-money-bill\"></i>  \n                     Cadastrar Processo\n                    </a>\n                </p>\n            </div>\n        )\n    }\n}\n\nHome.contextType = AuthContext;\n\nexport default Home","import React from 'react'\n\nimport { withRouter } from 'react-router-dom'\nimport Card from '../components/card'\nimport FormGroup from '../components/form-group'\n\nimport UsuarioService from '../app/service/usuarioService'\nimport { mensagemSucesso, mensagemErro } from '../components/toastr'\n\nclass CadastroUsuario extends React.Component{\n\n    state = {\n        nome : '',\n        email: '', \n        senha: '',\n        senhaRepeticao : ''\n    }\n\n    constructor(){\n        super();\n        this.service = new UsuarioService();\n    }\n\n    cadastrar = () => {\n\n        const {nome, email, senha, senhaRepeticao } = this.state        \n        const usuario = {nome,  email, senha, senhaRepeticao }\n\n        try{\n            this.service.validar(usuario);\n        }catch(erro){\n            const msgs = erro.mensagens;\n            msgs.forEach(msg => mensagemErro(msg));\n            return false;\n        }\n\n        this.service.salvar(usuario)\n            .then( response => {\n                mensagemSucesso('Usuário cadastrado com sucesso! Faça o login para acessar o sistema.')\n                this.props.history.push('/login')\n            }).catch(error => {\n                mensagemErro(error.response.data)\n            })\n    }\n\n    cancelar = () => {\n        this.props.history.push('/login')\n    }\n\n    render(){\n        return (\n            <Card title=\"Cadastro de Usuário\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"bs-component\">\n                            <FormGroup label=\"Nome: *\" htmlFor=\"inputNome\">\n                                <input type=\"text\" \n                                       id=\"inputNome\" \n                                       className=\"form-control\"\n                                       name=\"nome\"\n                                       onChange={e => this.setState({nome: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Email: *\" htmlFor=\"inputEmail\">\n                                <input type=\"email\" \n                                       id=\"inputEmail\"\n                                       className=\"form-control\"\n                                       name=\"email\"\n                                       onChange={e => this.setState({email: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Senha: *\" htmlFor=\"inputSenha\">\n                                <input type=\"password\" \n                                       id=\"inputSenha\"\n                                       className=\"form-control\"\n                                       name=\"senha\"\n                                       onChange={e => this.setState({senha: e.target.value})} />\n                            </FormGroup>\n                            <FormGroup label=\"Repita a Senha: *\" htmlFor=\"inputRepitaSenha\">\n                                <input type=\"password\" \n                                       id=\"inputRepitaSenha\"\n                                       className=\"form-control\"\n                                       name=\"senha\"\n                                       onChange={e => this.setState({senhaRepeticao: e.target.value})} />\n                            </FormGroup>\n                            <button onClick={this.cadastrar} type=\"button\" className=\"btn btn-success\">\n                                <i className=\"pi pi-save\"></i> Salvar\n                            </button>\n                            <button onClick={this.cancelar} type=\"button\" className=\"btn btn-danger\">\n                                <i className=\"pi pi-times\"></i> Cancelar\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n}\n\nexport default withRouter(CadastroUsuario)","import React from 'react'\n\nexport default (props) => {\n\n    const options = props.lista.map( (option, index)  => {\n        return (\n            <option key={index} value={option.value}>{option.label}</option>\n        )\n    })\n\n    return (\n        <select {...props}  >\n            {options}\n        </select>\n    )\n}","import React from 'react'\nimport currencyFormatter from 'currency-formatter'\n\nexport default props => {\n\n    const rows = props.processos.map( processo => {\n        return (\n            <tr key={processo.id}>\n                <td>{processo.parecer}</td>\n                <td>{processo.mes}</td>\n                <td>{processo.status}</td>\n                <td>\n                    <button className=\"btn btn-success\" title=\"Efetivar\"\n                            disabled={ processo.status !== 'PENDENTE' }\n                            onClick={e => props.alterarStatus(processo, 'EFETIVADO')} \n                            type=\"button\">\n                            <i className=\"pi pi-check\"></i>\n                    </button>\n                    <button className=\"btn btn-warning\"  title=\"Cancelar\"\n                            disabled={ processo.status !== 'PENDENTE' }\n                            onClick={e => props.alterarStatus(processo, 'CANCELADO')} \n                            type=\"button\">\n                            <i className=\"pi pi-times\"></i>\n                    </button>\n                    <button type=\"button\"   title=\"Editar\"\n                            className=\"btn btn-primary\"\n                            onClick={e => props.editAction(processo.id)}>\n                            <i className=\"pi pi-pencil\"></i>\n                    </button>\n                    <button type=\"button\"  title=\"Excluir\"\n                            className=\"btn btn-danger\" \n                            onClick={ e => props.deleteAction(processo)}>\n                            <i className=\"pi pi-trash\"></i>\n                    </button>\n                </td>\n            </tr>\n        )\n    } )\n\n    return (\n        <table className=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Descrição</th>\n                    <th scope=\"col\">Mês</th>\n                    <th scope=\"col\">Situação</th>\n                    <th scope=\"col\">Ações</th>\n                </tr>\n            </thead>\n            <tbody>\n                {rows}\n            </tbody>\n        </table>\n    )\n}\n\n","import ApiService from '../apiservice'\n\nimport ErroValidacao from '../exception/ErroValidacao'\n\nexport default class ProcessoService extends ApiService {\n\n    constructor(){\n        super('/api/processos')\n    }\n\n    obterListaMeses(){\n        return  [\n            { label: 'Selecione...', value: '' },\n            { label: 'Janeiro', value: 1 },\n            { label: 'Fevereiro', value: 2 },\n            { label: 'Março', value: 3 },\n            { label: 'Abril', value: 4 },\n            { label: 'Maio', value: 5 },\n            { label: 'Junho', value: 6 },\n            { label: 'Julho', value: 7 },\n            { label: 'Agosto', value: 8 },\n            { label: 'Setembro', value: 9 },\n            { label: 'Outubro', value: 10 },\n            { label: 'Novembro', value: 11 },\n            { label: 'Dezembro', value: 12 },\n        ]\n    }\n\n    obterListaTipos(){\n        return  [\n            { label: 'Selecione...', value: '' },\n            { label: 'Despesa' , value : 'DESPESA' },\n            { label: 'Receita' , value : 'RECEITA' }\n        ]\n\n    }\n\n    obterPorId(id){\n        return this.get(`/${id}`);\n    }\n\n    alterarStatus(id, status){\n        return this.put(`/${id}/atualiza-status`, { status })\n    }\n\n    validar(processo){\n        const erros = [];\n\n        if(!processo.ano){\n            erros.push(\"Informe o Ano.\")\n        }\n\n        if(!processo.mes){\n            erros.push(\"Informe o Mês.\")\n        }\n\n        if(!processo.parecer){\n            erros.push(\"Informe a Descrição.\")\n        }\n\n    \n        if(erros && erros.length > 0){\n            throw new ErroValidacao(erros);\n        }\n    }\n\n    salvar(processo){\n        return this.post('/', processo);\n    }\n\n    atualizar(processo){\n        return this.put(`/${processo.id}`, processo);\n    }\n\n    consultar(processoFiltro){\n        let params = `?ano=${processoFiltro.ano}`\n\n        if(processoFiltro.mes){\n            params = `${params}&mes=${processoFiltro.mes}`\n        }\n\n        if(processoFiltro.status){\n            params = `${params}&status=${processoFiltro.status}`\n        }\n\n        if(processoFiltro.usuario){\n            params = `${params}&usuario=${processoFiltro.usuario}`\n        }\n\n        if(processoFiltro.parecer){\n            params = `${params}&parecer=${processoFiltro.parecer}`\n        }\n\n        return this.get(params);\n    }\n\n    deletar(id){\n        return this.delete(`/${id}`)\n    }\n}","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Card from '../../components/card'\nimport FormGroup from '../../components/form-group'\nimport SelectMenu from '../../components/selectMenu'\nimport ProcessosTable from './processosTable'\nimport ProcessoService from '../../app/service/processoService'\nimport LocalStorageService from '../../app/service/localstorageService'\n\nimport * as messages from '../../components/toastr'\n\nimport {Dialog} from 'primereact/dialog';\nimport {Button} from 'primereact/button';\n\n\n\nclass ConsultaProcessos extends React.Component {\n\n    state = {\n        ano: '',\n        mes: '',\n        parecer: '',\n        showConfirmDialog: false,\n        processoDeletar: {},\n        processos : []\n    }\n\n    constructor(){\n        super();\n        this.service = new ProcessoService();\n    }\n\n    buscar = () => {\n        if(!this.state.ano){\n            messages.mensagemErro('O preenchimento do campo Ano é obrigatório.')\n            return false;\n        }\n\n        const usuarioLogado = LocalStorageService.obterItem('_usuario_logado');\n\n        const processoFiltro = {\n            ano: this.state.ano,\n            mes: this.state.mes,\n            parecer: this.state.parecer,\n            usuario: usuarioLogado.id\n        }\n\n        this.service\n            .consultar(processoFiltro)\n            .then( resposta => {\n                const lista = resposta.data;\n                \n                if(lista.length < 1){\n                    messages.mensagemAlert(\"Nenhum resultado encontrado.\");\n                }\n                this.setState({ processos: lista })\n            }).catch( error => {\n                console.log(error)\n            })\n    }\n\n    editar = (id) => {\n        this.props.history.push(`/cadastro-processos/${id}`)\n    }\n\n    abrirConfirmacao = (processo) => {\n        this.setState({ showConfirmDialog : true, processoDeletar: processo  })\n    }\n\n    cancelarDelecao = () => {\n        this.setState({ showConfirmDialog : false, processoDeletar: {}  })\n    }\n\n    deletar = () => {\n        this.service\n            .deletar(this.state.processoDeletar.id)\n            .then(response => {\n                const processos = this.state.processos;\n                const index = processos.indexOf(this.state.processoDeletar)\n                processos.splice(index, 1);\n                this.setState( { processos: processos, showConfirmDialog: false } )\n                messages.mensagemSucesso('Processo deletado com sucesso!')\n            }).catch(error => {\n                messages.mensagemErro('Ocorreu um erro ao tentar deletar o Processo')\n            })\n    }\n\n    preparaFormularioCadastro = () => {\n        this.props.history.push('/cadastro-processos')\n    }\n\n    alterarStatus = (processo, status) => {\n        this.service\n            .alterarStatus(processo.id, status)\n            .then( response => {\n                const processos = this.state.processos;\n                const index = processos.indexOf(processo);\n                if(index !== -1){\n                    processo['status'] = status;\n                    processos[index] = processo\n                    this.setState({processo});\n                }\n                messages.mensagemSucesso(\"Status atualizado com sucesso!\")\n            })\n    }\n\n    render(){\n        const meses = this.service.obterListaMeses();\n        \n\n        const confirmDialogFooter = (\n            <div>\n                <Button label=\"Confirmar\" icon=\"pi pi-check\" onClick={this.deletar} />\n                <Button label=\"Cancelar\" icon=\"pi pi-times\" onClick={this.cancelarDelecao} \n                        className=\"p-button-secondary\" />\n            </div>\n        );\n\n        return (\n            <Card title=\"Consulta Processos\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <div className=\"bs-component\">\n                            <FormGroup htmlFor=\"inputAno\" label=\"Ano: *\">\n                                <input type=\"text\" \n                                       className=\"form-control\" \n                                       id=\"inputAno\" \n                                       value={this.state.ano}\n                                       onChange={e => this.setState({ano: e.target.value})}\n                                       placeholder=\"Digite o Ano\" />\n                            </FormGroup>\n\n                            <FormGroup htmlFor=\"inputMes\" label=\"Mês: \">\n                                <SelectMenu id=\"inputMes\" \n                                            value={this.state.mes}\n                                            onChange={e => this.setState({ mes: e.target.value })}\n                                            className=\"form-control\" \n                                            lista={meses} />\n                            </FormGroup>\n\n                            <FormGroup htmlFor=\"inputDesc\" label=\"Descrição: \">\n                                <input type=\"text\" \n                                       className=\"form-control\" \n                                       id=\"inputDesc\" \n                                       value={this.state.parecer}\n                                       onChange={e => this.setState({parecer: e.target.value})}\n                                       placeholder=\"Digite a descrição\" />\n                            </FormGroup>\n\n                           \n\n                            <button onClick={this.buscar} \n                                    type=\"button\" \n                                    className=\"btn btn-success\">\n                                    <i className=\"pi pi-search\"></i> Buscar\n                            </button>\n                            <button onClick={this.preparaFormularioCadastro} \n                                    type=\"button\" \n                                    className=\"btn btn-danger\">\n                                    <i className=\"pi pi-plus\"></i> Cadastrar\n                            </button>\n\n                        </div>\n                        \n                    </div>\n                </div>   \n                <br/ >\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"bs-component\">\n                            <ProcessosTable processos={this.state.processos} \n                                              deleteAction={this.abrirConfirmacao}\n                                              editAction={this.editar}\n                                              alterarStatus={this.alterarStatus} />\n                        </div>\n                    </div>  \n                </div> \n                <div>\n                    <Dialog header=\"Confirmação\" \n                            visible={this.state.showConfirmDialog} \n                            style={{width: '50vw'}}\n                            footer={confirmDialogFooter} \n                            modal={true} \n                            onHide={() => this.setState({showConfirmDialog: false})}>\n                        Confirma a exclusão deste Processo?\n                    </Dialog>\n                </div>           \n            </Card>\n\n        )\n    }\n}\n\nexport default withRouter(ConsultaProcessos);","import React from 'react'\n\nimport Card from '../../components/card'\nimport FormGroup from '../../components/form-group'\nimport SelectMenu from '../../components/selectMenu'\n\nimport { withRouter } from 'react-router-dom'\nimport * as messages from '../../components/toastr'\n\nimport ProcessoService from '../../app/service/processoService'\nimport LocalStorageService from '../../app/service/localstorageService'\n\nclass CadastroProcessos extends React.Component {\n\n    state = {\n        id: null,\n        parecer: '',\n        mes: '',\n        ano: '',\n        status: '',\n        usuario: null,\n        atualizando: false\n    }\n\n    constructor(){\n        super();\n        this.service = new ProcessoService();\n    }\n\n    componentDidMount(){\n        const params = this.props.match.params\n       \n        if(params.id){\n            this.service\n                .obterPorId(params.id)\n                .then(response => {\n                    this.setState( {...response.data, atualizando: true} )\n                })\n                .catch(erros => {\n                    messages.mensagemErro(erros.response.data)\n                })\n        }\n    }\n\n    submit = () => {\n        const usuarioLogado = LocalStorageService.obterItem('_usuario_logado')\n\n        const { parecer, mes, ano, } = this.state;\n        const processo = { parecer, mes, ano, usuario: usuarioLogado.id };\n\n        try{\n            this.service.validar(processo)\n        }catch(erro){\n            const mensagens = erro.mensagens;\n            mensagens.forEach(msg => messages.mensagemErro(msg));\n            return false;\n        }     \n\n        this.service\n            .salvar(processo)\n            .then(response => {\n                this.props.history.push('/consulta-processos')\n                messages.mensagemSucesso('Processo cadastrado com sucesso!')\n            }).catch(error => {\n                messages.mensagemErro(error.response.data)\n            })\n    }\n\n    atualizar = () => {\n        const { parecer, mes, ano, status, usuario, id } = this.state;\n\n        const processo = { parecer, mes, ano, usuario, status, id };\n        \n        this.service\n            .atualizar(processo)\n            .then(response => {\n                this.props.history.push('/consulta-processos')\n                messages.mensagemSucesso('Processo atualizado com sucesso!')\n            }).catch(error => {\n                messages.mensagemErro(error.response.data)\n            })\n    }\n\n    handleChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n\n        this.setState({ [name] : value })\n    }\n\n    render(){\n        const meses = this.service.obterListaMeses();\n\n        return (\n            <Card title={ this.state.atualizando ? 'Atualização de Processo'  : 'Cadastro de Processo' }>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <FormGroup id=\"inputParecer\" label=\"Descrição: *\" >\n                            <input id=\"inputParecer\" type=\"text\" \n                                   className=\"form-control\" \n                                   name=\"parecer\"\n                                   value={this.state.parecer}\n                                   onChange={this.handleChange}  />\n                        </FormGroup>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <FormGroup id=\"inputAno\" label=\"Ano: *\">\n                            <input id=\"inputAno\" \n                                   type=\"text\"\n                                   name=\"ano\"\n                                   value={this.state.ano}\n                                   onChange={this.handleChange} \n                                   className=\"form-control\" />\n                        </FormGroup>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <FormGroup id=\"inputMes\" label=\"Mês: *\">\n                            <SelectMenu id=\"inputMes\" \n                                        value={this.state.mes}\n                                        onChange={this.handleChange}\n                                        lista={meses} \n                                        name=\"mes\"\n                                        className=\"form-control\" />\n                        </FormGroup>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    \n\n                    <div className=\"col-md-12\">\n                         <FormGroup id=\"inputStatus\" label=\"Status: \">\n                            <input type=\"text\" \n                                   className=\"form-control\" \n                                   name=\"status\"\n                                   value={this.state.status}\n                                   disabled />\n                        </FormGroup>\n                    </div>\n\n                   \n                </div>\n                <div className=\"row\">\n                     <div className=\"col-md-6\" >\n                        { this.state.atualizando ? \n                            (\n                                <button onClick={this.atualizar} \n                                        className=\"btn btn-success\">\n                                        <i className=\"pi pi-refresh\"></i> Atualizar\n                                </button>\n                            ) : (\n                                <button onClick={this.submit} \n                                        className=\"btn btn-success\">\n                                        <i className=\"pi pi-save\"></i> Salvar\n                                </button>\n                            )\n                        }\n                        <button onClick={e => this.props.history.push('/consulta-processos')} \n                                className=\"btn btn-danger\">\n                                <i className=\"pi pi-times\"></i>Cancelar\n                        </button>\n                    </div>\n                </div>\n            </Card>\n        )\n    }\n}\n\nexport default withRouter(CadastroProcessos);","import React from 'react'\n\nimport Login from '../views/login'\nimport Home from '../views/home'\nimport CadastroUsuario from '../views/cadastroUsuario'\nimport ConsultaProcessos from '../views/processos/consulta-processos'\nimport CadastroProcessos from '../views/processos/cadastro-processos'\nimport { AuthConsumer } from '../main/provedorAutenticacao'\n\nimport { Route, Switch, HashRouter, Redirect } from 'react-router-dom'\n\nfunction RotaAutenticada( { component: Component, isUsuarioAutenticado, ...props } ){\n    return (\n        <Route {...props} render={ (componentProps) => {\n            if(isUsuarioAutenticado){\n                return (\n                    <Component {...componentProps} />\n                )\n            }else{\n                return(\n                    <Redirect to={ {pathname : '/login', state : { from: componentProps.location } } } />\n                )\n            }\n        }}  />\n    )\n}\n\nfunction Rotas(props){\n    return (\n        <HashRouter>\n            <Switch>\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/cadastro-usuarios\" component={CadastroUsuario} />\n                \n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/home\" component={Home} />\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/consulta-processos\" component={ConsultaProcessos} />\n                <RotaAutenticada isUsuarioAutenticado={props.isUsuarioAutenticado} path=\"/cadastro-processos/:id?\" component={CadastroProcessos} />\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default () => (\n    <AuthConsumer>\n        { (context) => (<Rotas isUsuarioAutenticado={context.isAutenticado} />) }\n    </AuthConsumer>\n)","import React from 'react'\n\nfunction NavbarItem( {render, ...props} ){\n    if(render){\n        return (\n            <li className=\"nav-item\">\n                <a onClick={props.onClick} className=\"nav-link\" href={props.href}>{props.label}</a>\n            </li>\n        )\n    }else{\n        return false;\n    }\n}\n\nexport default NavbarItem","import React from 'react'\n\nimport NavbarItem from './navbarItem'\nimport { AuthConsumer } from '../main/provedorAutenticacao'\n\nfunction Navbar(props){\n    return (\n        <div className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-primary\">\n        <div className=\"container\">\n          <a href=\"#/home\" className=\"navbar-brand\">Meus Processos</a>\n          <button className=\"navbar-toggler\" type=\"button\" \n                  data-toggle=\"collapse\" data-target=\"#navbarResponsive\" \n                  aria-controls=\"navbarResponsive\" aria-expanded=\"false\" \n                  aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul className=\"navbar-nav\">\n                <NavbarItem render={props.isUsuarioAutenticado} href=\"#/home\" label=\"Home\" />\n                <NavbarItem render={props.isUsuarioAutenticado} href=\"#/cadastro-usuarios\" label=\"Usuários\" />\n                <NavbarItem render={props.isUsuarioAutenticado} href=\"#/consulta-processos\" label=\"Processos\" />\n                <NavbarItem render={props.isUsuarioAutenticado} onClick={props.deslogar} href=\"#/login\" label=\"Sair\" />\n            </ul>\n            </div>\n        </div>\n      </div>\n    )\n}\n\nexport default () => (\n  <AuthConsumer>\n    {(context) => (\n        <Navbar isUsuarioAutenticado={context.isAutenticado} deslogar={context.encerrarSessao} />\n    )}\n  </AuthConsumer>\n)","import React from 'react';\n\nimport Rotas from './rotas'\nimport Navbar from '../components/navbar'\nimport ProvedorAutenticacao from './provedorAutenticacao'\n\nimport 'toastr/build/toastr.min'\n\nimport 'bootswatch/dist/flatly/bootstrap.css'\nimport '../custom.css'\nimport 'toastr/build/toastr.css'\n\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nclass App extends React.Component {\n\n  render(){\n    return(\n      <ProvedorAutenticacao>\n        <Navbar />\n        <div className=\"container\">    \n            <Rotas />\n        </div>\n      </ProvedorAutenticacao>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './main/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}